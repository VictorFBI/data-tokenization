// Package rest_common provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package rest_common

import (
	openapi_types "github.com/oapi-codegen/runtime/types"
)

// Defines values for SortDirection.
const (
	Asc  SortDirection = "Asc"
	Desc SortDirection = "Desc"
)

// Cursor Limit of tokens_repository to return
type Cursor = int

// Date defines model for Date.
type Date = openapi_types.Date

// ErrorResponse defines model for ErrorResponse.
type ErrorResponse struct {
	Error *string `json:"error,omitempty"`
}

// Filter defines model for Filter.
type Filter struct {
	EndDate       *Date          `json:"end_date,omitempty"`
	SortDirection *SortDirection `json:"sort_direction,omitempty"`
	StartDate     *Date          `json:"start_date,omitempty"`

	// TokenName Name of the user's tokenized file
	TokenName *TokenName `json:"token_name,omitempty"`
	TokenType *string    `json:"token_type,omitempty"`
}

// Limit Cursor to start from
type Limit = int

// ListTokenResponse defines model for ListTokenResponse.
type ListTokenResponse struct {
	CurrencyCode *string `json:"currency_code,omitempty"`

	// Price Число с точностью до 18 знаков после запятой
	Price Price `json:"price"`

	// TokenName Name of the user's tokenized file
	TokenName TokenName `json:"token_name"`
	TokenType string    `json:"token_type"`
}

// Price Число с точностью до 18 знаков после запятой
type Price = string

// SortDirection defines model for SortDirection.
type SortDirection string

// Token defines model for Token.
type Token struct {
	Description string `json:"description"`
	FileName    string `json:"file_name"`

	// Price Число с точностью до 18 знаков после запятой
	Price Price `json:"price"`

	// TokenName Name of the user's tokenized file
	TokenName TokenName `json:"token_name"`
	TokenType string    `json:"token_type"`
}

// TokenName Name of the user's tokenized file
type TokenName = string

// UserId User ID inside the blockchain system (address)
type UserId = string
