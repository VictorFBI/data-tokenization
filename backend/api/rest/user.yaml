openapi: 3.0.0
info:
  version: 1.0.0
  title: Token Management API for user screen
  description: API for managing and filtering tokens
servers:
  - url: http://localhost:8080
    description: Development server

paths:
  /user/token/downloadLink:
    get:
      tags:
        - User
      parameters:
        - in: query
          name: user_id
          required: true
          schema:
            $ref: 'common.yaml#/components/schemas/UserId'
        - in: query
          name: name
          required: true
          schema:
            $ref: 'common.yaml#/components/schemas/TokenName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetTokenDownloadLinkResponse'
        '404':
          description: File with this token name not found
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/ErrorResponse'
  
  /user/token:
    get:
      tags:
        - User
      parameters:
        - in: query
          name: user_id
          required: true
          schema:
            $ref: 'common.yaml#/components/schemas/UserId'
        - in: query
          name: name
          required: true
          schema:
            $ref: 'common.yaml#/components/schemas/TokenName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetTokenResponse'
        '404':
          description: File with this token name not found
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/ErrorResponse'
    
    post:
      tags:
        - User
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserPostTokenRequest'
      responses:
        '200':
          description: OK

    delete:
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDeleteTokenRequest'
      responses:
        '200':
          description: OK
        '404':
          description: File with this token name not found
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/ErrorResponse'

    patch:
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPatchTokenRequest'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/ErrorResponse'
        '404':
          description: File with this token name not found
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/ErrorResponse'

  /user/token/list:
    get:
      tags:
        - User
      parameters:
        - in: query
          name: user_id
          required: true
          schema:
            $ref: 'common.yaml#/components/schemas/UserId'
        - in: query
          name: cursor
          required: true
          schema:
            $ref: 'common.yaml#/components/schemas/Cursor'
        - in: query
          name: limit
          required: true
          schema:
            $ref: 'common.yaml#/components/schemas/Limit'

        # Filters
        - in: query
          name: name
          schema:
            $ref: 'common.yaml#/components/schemas/TokenName'
        - in: query
          name: type
          schema:
            type: string
        - in: query
          name: start_date
          schema:
            $ref: 'common.yaml#/components/schemas/Date'
        - in: query
          name: end_date
          schema:
            $ref: 'common.yaml#/components/schemas/Date'
        - in: query
          name: sort_direction_on_updated_at
          schema:
            $ref: 'common.yaml#/components/schemas/SortDirection'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListTokenResponse'
                
  /user/history:
    get:
      tags:
        - User
      parameters:
        - in: query
          name: user_id
          required: true
          schema:
            $ref: 'common.yaml#/components/schemas/UserId'
        - in: query
          name: cursor
          required: true
          schema:
            $ref: 'common.yaml#/components/schemas/Cursor'
        - in: query
          name: limit
          required: true
          schema:
            $ref: 'common.yaml#/components/schemas/Limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserHistoryTokenResponse'

components:
  schemas:
    UserGetTokenDownloadLinkResponse:
      type: object
      required:
        - link
      properties:
        link:
          type: string
    
    UserListTokenResponse:
      type: object
      properties:
        tokens:
          type: array
          items:
            $ref: '#/components/schemas/TokenListItems'
        next_cursor:
          $ref: 'common.yaml#/components/schemas/Cursor'
    
    TokenListItems:
      type: object
      required:
        - name
        - type
        - price
        - currency_code
      properties:
        name:
          $ref: 'common.yaml#/components/schemas/TokenName'
        type:
          type: string
        price:
          $ref: 'common.yaml#/components/schemas/Price'
        currency_code:
          type: string
          
    UserHistoryTokenResponse:
      type: object
      properties:
        tokens:
          type: array
          items:
            $ref: '#/components/schemas/UserHistoryItem'
        next_cursor:
          $ref: 'common.yaml#/components/schemas/Cursor'
    
    UserHistoryItem:
      type: object
      required:
        - token_name
        - action
        - date
      properties:
        token_name:
          $ref: 'common.yaml#/components/schemas/TokenName'
        action:
          type: string
        date:
          $ref: 'common.yaml#/components/schemas/Date'
    
    UserGetTokenResponse:
      type: object
      properties:
        token:
          $ref: 'common.yaml#/components/schemas/Token'
    
    UserPostTokenRequest:
      type: object
      required:
        - user_id
        - file
        - name
        - type
        - eth_public_key
      properties:
        user_id:
          $ref: 'common.yaml#/components/schemas/UserId'
        file:
          $ref: '#/components/schemas/File'
        name:
          $ref: 'common.yaml#/components/schemas/TokenName'
        type:
          type: string
        eth_public_key:
          type: string
          description: Public key of the user's Ethereum account

    UserDeleteTokenRequest:
      type: object
      required:
        - user_id
        - name
      properties:
        user_id:
          $ref: 'common.yaml#/components/schemas/UserId'
        name:
          $ref: 'common.yaml#/components/schemas/TokenName'

    UserPatchTokenRequest:
      type: object
      required:
        - user_id
        - name
      properties:
        user_id:
          $ref: 'common.yaml#/components/schemas/UserId'
        name:
          $ref: 'common.yaml#/components/schemas/TokenName'
        new_name:
          type: string
        type:
          type: string
        description:
          type: string
        is_on_market:
          type: boolean
        price:
          $ref: 'common.yaml#/components/schemas/Price'
        currency_code:
          type: string
    
    File:
      type: string
      format: binary
      description: File to be tokenized
