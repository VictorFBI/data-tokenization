openapi: 3.0.0
info:
  version: 1.0.0
  title: Token Management API for user screen
  description: API for managing and filtering tokens
servers:
  - url: http://localhost:8080
    description: Development server

paths:
  /market/token:
    get:
      tags:
        - Market
      parameters:
        - in: query
          name: user_id
          required: true
          schema:
            $ref: 'common.yaml#/components/schemas/UserId'
        - in: query
          name: token_name
          required: true
          schema:
            $ref: 'common.yaml#/components/schemas/TokenName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketTokenGetResponse'
        '404':
          description: File with this token_name not found
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/ErrorResponse'

    patch:
      tags:
        - Market
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketTokenPatchRequest'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/ErrorResponse'
        '404':
          description: File with this token name not found
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/ErrorResponse'

  /market/token/list:
    get:
      tags:
        - Market
      parameters:
        - in: query
          name: cursor
          required: true
          schema:
            $ref: 'common.yaml#/components/schemas/Cursor'
        - in: query
          name: limit
          required: true
          schema:
            $ref: 'common.yaml#/components/schemas/Limit'
        - in: query
          name: user_id
          required: true
          schema:
            $ref: 'common.yaml#/components/schemas/UserId'

        # Filters
        - in: query
          name: token_name
          schema:
            $ref: 'common.yaml#/components/schemas/TokenName'
        - in: query
          name: token_type
          schema:
            type: string
        - in: query
          name: start_date
          schema:
            $ref: 'common.yaml#/components/schemas/Date'
        - in: query
          name: end_date
          schema:
            $ref: 'common.yaml#/components/schemas/Date'
        - in: query
          name: sort_direction_on_created_at
          schema:
            $ref: 'common.yaml#/components/schemas/SortDirection'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketTokenListResponse'

  /market/token/buy:
    post:
      tags:
        - Market
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketTokenBuyRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketTokenBuyResponse'
        '404':
          description: File with this token name not found
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/ErrorResponse'

components:
  schemas:
    MarketTokenGetResponse:
      type: object
      required:
        - token
      properties:
        token:
          $ref: 'common.yaml#/components/schemas/Token'

    MarketTokenBuyRequest:
      type: object
      required:
        - token_name
        - seller_id
        - buyer_id
      properties:
        token_name:
          $ref: 'common.yaml#/components/schemas/TokenName'
        seller_id:
          $ref: 'common.yaml#/components/schemas/UserId'
        buyer_id:
          $ref: 'common.yaml#/components/schemas/UserId'
    
    MarketTokenBuyResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    
    MarketTokenListResponse:
      type: object
      properties:
        tokens:
          type: array
          items:
            $ref: 'common.yaml#/components/schemas/ListTokenResponse'
        next_cursor:
          type: integer
    
    MarketTokenPatchRequest:
      type: object
      required:
        - user_id
        - token_name
        - enable_for_market
      properties:
        user_id:
          $ref: 'common.yaml#/components/schemas/UserId'
        token_name:
          $ref: 'common.yaml#/components/schemas/TokenName'
        enable_for_market:
          type: boolean
          description: True - put on the market, false - otherwise
